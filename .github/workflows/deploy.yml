# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Build and deploy each project
        run: |
          # List all directories
          for dir in $(ls -d */); do
            echo "Building and deploying $dir"
            
            # Enter the directory
            cd $dir
            
            # Install dependencies and build the project
            pnpm install
            pnpm run build
            
            # Move the build output to a temp directory to prepare for deployment
            mv dist "../${dir%/}-dist"
            
            # Go back to the root directory
            cd ..
          done

      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload built artifacts
        run: |
          # Upload all the build outputs from each directory
          for dir in $(ls -d */); do
            dir_dist="${dir%/}-dist"
            echo "Uploading $dir_dist"
            
            # Check if the dist folder exists before attempting upload
            if [ -d "$dir_dist" ]; then
              actions/upload-pages-artifact@v3 --path "./$dir_dist"
            else
              echo "$dir_dist does not exist, skipping..."
            fi
          done
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
